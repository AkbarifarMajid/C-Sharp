<Window x:Class="GolddiggerGmbh.Views.DashboardWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Dashboard" Height="602" Width="1373"
        WindowStartupLocation="CenterScreen">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Header -->
            <RowDefinition Height="Auto"/>
            <!-- Toolbar -->
            <RowDefinition Height="*"/>
            <!-- Table -->
            <RowDefinition Height="Auto"/>
            <!-- Status -->
        </Grid.RowDefinitions>

        <!-- Header: company name centered -->
        <Border Grid.Row="0" Padding="10,12" BorderThickness="0,0,0,1" BorderBrush="#DDD">
            <TextBlock Text="Golddigger GmbH"
                       FontSize="24" FontWeight="Bold"
                       HorizontalAlignment="Center"/>
        </Border>

        <!-- Toolbar -->
        <DockPanel Grid.Row="1" LastChildFill="False" Margin="10">

            <!-- Search mode
                 IMPORTANT: use SelectedValue + SelectedValuePath=Content
                 so the VM string property (SearchMode) receives "All" | "By Id" | "By Email" -->
            <ComboBox x:Name="CmbSearchMode"
                      Width="120" Margin="0,0,8,0"
                      SelectedValue="{Binding SearchMode, Mode=TwoWay}"
                      SelectedValuePath="Content">
                <ComboBoxItem Content="All"/>
                <ComboBoxItem Content="By Id"/>
                <ComboBoxItem Content="By Email"/>
            </ComboBox>

            <!-- Search text -->
            <TextBox x:Name="TxtSearch"
                     Width="220" Margin="0,0,8,0"
                     Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <!-- Search / Clear -->
            <Button Content="Search" Width="90" Margin="0,0,8,0" Click="Search_Click"/>
            <Button Content="Clear"  Width="90" Margin="0,0,16,0" Click="Clear_Click"/>

            <!-- CRUD buttons (Edit/Delete enabled via VM.HasSelection) -->
            <Button x:Name="BtnAdd"    Content="Add"    Width="90" Margin="0,0,8,0"  Click="Add_Click"/>
            <Button x:Name="BtnEdit"   Content="Edit"   Width="90" Margin="0,0,8,0"  Click="Edit_Click"
                    IsEnabled="{Binding HasSelection}"/>
            <Button x:Name="BtnDelete" Content="Delete" Width="90" Margin="0,0,16,0" Click="Delete_Click"
                    IsEnabled="{Binding HasSelection}"/>

            <!-- Exit -->
            <Button Content="Exit" Width="90" Click="Exit_Click"/>
        </DockPanel>

        <!-- Customers table
             ItemsSource ← VM.Customers
             SelectedItem ←→ VM.SelectedCustomer -->
        <DataGrid x:Name="GridCustomers"
                  Grid.Row="2" Margin="10"
                  AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False"
                  SelectionMode="Single"
                  ItemsSource="{Binding Customers}"
                  SelectedItem="{Binding SelectedCustomer, Mode=TwoWay}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id"         Binding="{Binding Id}"        Width="60"/>
                <DataGridTextColumn Header="FirstName"  Binding="{Binding FirstName}" Width="*"/>
                <DataGridTextColumn Header="LastName"   Binding="{Binding LastName}"  Width="*"/>
                <DataGridTextColumn Header="Street"     Binding="{Binding Street}"    Width="*"/>
                <DataGridTextColumn Header="No"         Binding="{Binding No}"        Width="*"/>
                <DataGridTextColumn Header="PostalCode" Binding="{Binding PostalCode}" Width="*"/>
                <DataGridTextColumn Header="City"       Binding="{Binding City}"      Width="*"/>
                <DataGridTextColumn Header="Email"      Binding="{Binding Email}"     Width="*"/>
                <DataGridTextColumn Header="PhoneNumber"      Binding="{Binding PhoneNumber}" Width="*"/>
                <DataGridTextColumn Header="BirthDate"  Binding="{Binding BirthDate, StringFormat={}{0:yyyy-MM-dd}}"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Status bar: bind to VM.StatusText (no need to set from code-behind) -->
        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusText}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
